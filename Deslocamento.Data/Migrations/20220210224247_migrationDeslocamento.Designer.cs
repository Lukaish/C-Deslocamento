// <auto-generated />
using System;
using DeslocamentoApi.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DeslocamentoApi.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220210224247_migrationDeslocamento")]
    partial class migrationDeslocamento
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DeslocamentoApi.Domain.Entities.Carro", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("Descricao");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)")
                        .HasColumnName("Placa");

                    b.HasKey("Id");

                    b.ToTable("Carro", (string)null);
                });

            modelBuilder.Entity("DeslocamentoApi.Domain.Entities.Cliente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("Cpf");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Nome");

                    b.HasKey("Id");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("DeslocamentoApi.Domain.Entities.Condutor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Nome");

                    b.HasKey("Id");

                    b.ToTable("Condutor", (string)null);
                });

            modelBuilder.Entity("DeslocamentoApi.Domain.Entities.Deslocamento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("CarroId")
                        .HasColumnType("bigint");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<long>("CondutorId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DataHoraFim")
                        .HasColumnType("datetime")
                        .HasColumnName("Data_HoraFim");

                    b.Property<DateTime>("DataHoraRegistro")
                        .HasColumnType("datetime")
                        .HasColumnName("Data_Hora_Inicio");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Observacao");

                    b.Property<decimal>("QuilometragemFinal")
                        .HasColumnType("decimal")
                        .HasColumnName("Quilometragem_Final");

                    b.Property<decimal>("QuilometragemInicial")
                        .HasColumnType("decimal")
                        .HasColumnName("Quilometragem_Inicial");

                    b.HasKey("Id");

                    b.HasIndex("CarroId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("CondutorId");

                    b.ToTable("Deslocamento", (string)null);
                });

            modelBuilder.Entity("DeslocamentoApi.Domain.Entities.Deslocamento", b =>
                {
                    b.HasOne("DeslocamentoApi.Domain.Entities.Carro", "Carro")
                        .WithMany("Deslocamentos")
                        .HasForeignKey("CarroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Carro_Deslocamento_CarroID");

                    b.HasOne("DeslocamentoApi.Domain.Entities.Cliente", "Cliente")
                        .WithMany("Deslocamentos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Carro_Deslocamento_ClienteID");

                    b.HasOne("DeslocamentoApi.Domain.Entities.Condutor", "Condutor")
                        .WithMany("Deslocamentos")
                        .HasForeignKey("CondutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Condutor_Deslocamento_CondutorID");

                    b.Navigation("Carro");

                    b.Navigation("Cliente");

                    b.Navigation("Condutor");
                });

            modelBuilder.Entity("DeslocamentoApi.Domain.Entities.Carro", b =>
                {
                    b.Navigation("Deslocamentos");
                });

            modelBuilder.Entity("DeslocamentoApi.Domain.Entities.Cliente", b =>
                {
                    b.Navigation("Deslocamentos");
                });

            modelBuilder.Entity("DeslocamentoApi.Domain.Entities.Condutor", b =>
                {
                    b.Navigation("Deslocamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
